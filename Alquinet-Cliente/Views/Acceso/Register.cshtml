@model Alquinet_Entidad.Usuario

@{
    ViewBag.Title = "Registro";
    Layout = null;  // Assuming no layout is used, you can set it back to a layout if needed
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Registrar</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        .modal-title {
            color: white;
            text-shadow: 0 0 5px black;
        }

            .modal-title:hover {
                text-shadow: 0 0 10px black;
            }
    </style>
</head>
<body class="bg-dark text-light">
    <div class="container mt-3">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card h-100 bg-dark">
                    <div class="modal-header justify-content-center mb-3">
                        <h1 class="modal-title fs-5">REGISTRAR</h1>
                    </div>
                    <div class="modal-body">
                        @* Display validation summary for any form-level errors *@
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        @* Form to register a new user *@
                        @using (Html.BeginForm("Register", "Acceso", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Nombre, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", placeholder = "Nombre de Usuario", required = "required" })
                                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Apellido, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Apellido, new { @class = "form-control", placeholder = "Apellidos", required = "required" })
                                @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Ci, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Ci, new { @class = "form-control", placeholder = "CI", required = "required" })
                                @Html.ValidationMessageFor(model => model.Ci, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Contraseña, new { @class = "control-label" })
                                @Html.PasswordFor(model => model.Contraseña, new { @class = "form-control", placeholder = "Contraseña", required = "required" })
                                @Html.ValidationMessageFor(model => model.Contraseña, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                <label for="confirm-password">Confirmar Contraseña</label>
                                <input type="password" id="confirm-password" name="clave" class="form-control" placeholder="Confirmar Contraseña" required />
                                <span class="text-danger">@Html.ValidationMessage("clave")</span>
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Correo, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Correo, new { @class = "form-control", placeholder = "Correo Electrónico", required = "required", type = "email" })
                                @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Telefono, new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", placeholder = "Celular", required = "required" })
                                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                            </div>

                            <div class="d-grid mb-3">
                                <button type="submit" class="btn btn-primary">REGISTRAR</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* Scripts for client-side validation *@
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
</body>
</html>
